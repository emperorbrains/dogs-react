{"version":3,"sources":["shared/components/AppHeader.js","shared/templates/MainTemplate/MainTemplate.js","shared/templates/MainTemplate/MainTemplateContainer.js","shared/components/GoogleLoader.js","modules/home/components/Home.js","utils/index.js","modules/home/components/HomeContainer.js","utils/hooks.js","shared/components/Notifications.js","utils/request-states.js","modules/home/redux/reducer.js","scenes/Home.js","shared/templates/BasicTemplate/BasicTemplate.js","shared/templates/BasicTemplate/BasicTemplateContainer.js","shared/components/NotFound.js","scenes/NotFound.js","Routes.js","store/rootReducer.js","modules/home/redux/actionTypes.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","children","className","defaultProps","MainTemplate","MainTemplateContainer","nextPageLink","GoogleLoader","height","width","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","Home","onSelectedBreedChange","loading","console","log","tag","blocking","loader","HomeContainer","hasError","errorMessages","prevErrorMessages","value","ref","useRef","useEffect","current","usePrevious","currentErrors","nextErrors","message","type","timeOut","_currentErrors","filter","error","undefined","_nextErrors","i","length","toast","autoClose","displayErrors","connect","state","dispatch","INITIAL_STATE","breeds","getBreedsRequestState","RequestStates","getBreedsError","getBreedImagesRequestState","getBreedImagesError","AddReview","BasicTemplate","BasicTemplateContainer","NotFound","to","Routes","exact","path","component","rootReducer","combineReducers","form","formReducer","home","action","payload","reduxStore","createStore","compose","applyMiddleware","thunk","createPromise","promiseTypeSuffixes","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","store","id","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98a50109.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AppHeader = ({ children }) => (\n  <div className=\"app-header\">\n    {children}\n  </div>\n);\n\nAppHeader.propTypes = {\n  children: PropTypes.element,\n};\n\nAppHeader.defaultProps = {\n  children: <div />,\n};\n\nexport default AppHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppHeader from '../../components/AppHeader';\n\nconst MainTemplate = ({ children }) => (\n  <div className=\"main-template\">\n    <AppHeader />\n    <main>\n      {children}\n    </main>\n  </div>\n);\n\nMainTemplate.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n};\n\nMainTemplate.defaultProps = {\n  children: <div />,\n};\n\nexport default MainTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MainTemplate from './MainTemplate';\n\nconst MainTemplateContainer = ({ nextPageLink, children }) => (\n  <MainTemplate nextPageLink={nextPageLink}>\n    {children}\n  </MainTemplate>\n);\n\nMainTemplateContainer.propTypes = {\n  nextPageLink: PropTypes.element,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n};\n\nMainTemplateContainer.defaultProps = {\n  nextPageLink: <div />,\n  children: <div />,\n};\n\nexport default MainTemplateContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GoogleLoader = ({ className, height, width }) => (\n  <svg\n    className={`spinner ${className || ''}`}\n    width={width}\n    height={height}\n    viewBox=\"0 0 66 66\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle\n      className=\"path\"\n      fill=\"none\"\n      strokeWidth=\"6\"\n      strokeLinecap=\"round\"\n      cx=\"33\"\n      cy=\"33\"\n      r=\"30\"\n    />\n  </svg>\n);\n\nGoogleLoader.propTypes = {\n  className: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nGoogleLoader.defaultProps = {\n  className: '',\n  height: 20,\n  width: 20,\n};\n\nexport default GoogleLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BlockUI from 'react-block-ui';\n\nimport GoogleLoader from '../../../shared/components/GoogleLoader';\nimport { noop } from '../../../utils';\n\nconst Home = ({ onSelectedBreedChange, loading }) => (\n  <div className=\"home\">\n    <div className=\"page-head\">\n      <h1>Dogs!</h1>\n      <input className=\"search\" />\n    </div>\n    {console.log(onSelectedBreedChange)}\n    <BlockUI\n      tag=\"div\"\n      blocking={loading}\n      loader={<GoogleLoader height={50} width={50} />}\n    >\n      Dogs\n    </BlockUI>\n  </div>\n);\n\nHome.propTypes = {\n  onSelectedBreedChange: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nHome.defaultProps = {\n  onSelectedBreedChange: noop,\n  loading: false,\n};\n\nexport default Home;\n","import { showNotification } from '../shared/components/Notifications';\n\nexport const noop = () => {};\n\nexport const guidGenerator = () => {\n  const S4 = () => (((1 + Math.random()) * 0x10000) || 0).toString(16).substring(1);\n  return (`${S4() + S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`);\n};\n\nexport const displayErrors = (currentErrors, nextErrors) => {\n  const _currentErrors = currentErrors\n    && currentErrors.filter((error) => !(error === null || error === undefined));\n  const _nextErrors = nextErrors\n    && nextErrors.filter((error) => !(error === null || error === undefined));\n  for (let i = 0; i <= _nextErrors.length - 1; i++) {// eslint-disable-line\n    if (\n      (_currentErrors && _currentErrors.length > 0\n        && _currentErrors[i] && _currentErrors[i].message)\n        !== (_nextErrors && _nextErrors.length > 0 && _nextErrors[i].message)\n    ) {\n      if (_nextErrors[i].message) showNotification(_nextErrors[i].message, 'error', 8000);\n    }\n  }\n  return false;\n};\n\nexport const Ellipsis = (string, noOfCharacters) => {\n  if (string && string.length > 0) {\n    const clampedLines = `${string.substring(0, noOfCharacters)}${string.substring(noOfCharacters).length > 0 ? '...' : ''}`;\n    return clampedLines;\n  }\n  return '';\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Home from './Home';\n// import * as actions from '../redux/actions';\nimport { displayErrors } from '../../../utils';\nimport { usePrevious } from '../../../utils/hooks';\n// import RequestStates from '../../../utils/request-states';\n\nconst HomeContainer = ({\n  loading, hasError, errorMessages,\n}) => {\n  const prevErrorMessages = usePrevious(errorMessages);\n\n  useEffect(() => {\n    // getAllBreeds();\n  }, []);\n\n  useEffect(() => {\n    if (hasError) {\n      displayErrors(prevErrorMessages, errorMessages);\n    }\n  }, [hasError, errorMessages]);\n\n  return (\n    <Home\n      loading={loading}\n    />\n  );\n};\n\nHomeContainer.propTypes = {\n  loading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  errorMessages: PropTypes.instanceOf(Array),\n};\n\nHomeContainer.defaultProps = {\n  loading: false,\n  hasError: false,\n  errorMessages: [],\n};\n\nconst mapStateToProps = state => ({ // eslint-disable-line\n  // loading: state.home.getBreedsRequestState === RequestStates.loading,\n  // hasError: state.home.getBreedImagesRequestState === RequestStates.error,\n  // errorMessages: [\n  //   state.home.getBreeds,\n  // ],\n});\n\nconst mapDispatchToProps = dispatch => ({// eslint-disable-line\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);\n","import { useEffect, useRef } from 'react';\n\nexport const usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport const fake = '';\n","import { toast } from 'react-toastify'; // Notification message container\n\nexport const showNotification = (message, type, timeOut) => toast(\n  `${message}`,\n  {\n    type, // allowed types [\"info\",\"success\",\"warning\",\"error\",\"default\"]\n    autoClose: timeOut,\n  },\n);\n\nexport const dismissNotification = toastId => toast.dismiss(toastId);\n","export default {\n  init: 'INITIALIZATION',\n  success: 'SUCCESS',\n  loading: 'LOADING',\n  error: 'ERROR',\n};\n","import * as actionTypes from './actionTypes';\nimport RequestStates from '../../../utils/request-states';\n\nconst INITIAL_STATE = {\n  breeds: [],\n  getBreedsRequestState: RequestStates.init,\n  getBreedsError: null,\n  getBreedImagesRequestState: RequestStates.init,\n  getBreedImagesError: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.GET_BREEDS_LOADING:\n      return {\n        ...state,\n        getBreedsRequestState: RequestStates.loading,\n        getBreedsError: null,\n      };\n    case actionTypes.GET_BREEDS_SUCCESS:\n      return {\n        ...state,\n        breeds: action.payload.breeds,\n        getBreedsRequestState: RequestStates.success,\n        getBreedsError: null,\n      };\n    case actionTypes.GET_BREEDS_ERROR:\n      return {\n        ...state,\n        getBreedsRequestState: RequestStates.error,\n        getBreedsError: action.payload.error,\n      };\n    case actionTypes.GET_BREED_IMAGES_LOADING:\n      return {\n        ...state,\n        getBreedImagesRequestState: RequestStates.loading,\n        getBreedImagesError: null,\n      };\n    case actionTypes.GET_BREED_IMAGES_SUCCESS:\n      return {\n        ...state,\n        getBreedImagesRequestState: RequestStates.success,\n        getBreedImagesError: null,\n      };\n    case actionTypes.GET_BREED_IMAGES_ERROR:\n      return {\n        ...state,\n        getBreedImagesRequestState: RequestStates.error,\n        getBreedImagesError: action.payload.error,\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\n\nimport MainTemplate from '../shared/templates/MainTemplate/MainTemplateContainer';\nimport { HomeContainer } from '../modules/home';\n\nconst AddReview = () => (\n  <MainTemplate>\n    <HomeContainer />\n  </MainTemplate>\n);\n\nexport default AddReview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BasicTemplate = ({ children }) => (\n  <div className=\"page\">\n    <div className=\"widget\">\n      <div className=\"children\">\n        {children}\n      </div>\n    </div>\n  </div>\n);\n\nBasicTemplate.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n};\n\nBasicTemplate.defaultProps = {\n  children: <div />,\n};\n\nexport default BasicTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BasicTemplate from './BasicTemplate';\n\nconst BasicTemplateContainer = ({ children }) => (\n  <BasicTemplate>\n    {children}\n  </BasicTemplate>\n);\n\nBasicTemplateContainer.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n};\n\nBasicTemplateContainer.defaultProps = {\n  children: <div />,\n};\n\nexport default BasicTemplateContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => (\n  <div className=\"not-found\">\n    <h1>404</h1>\n    <br />\n    <p>This is not the page you are looking for.</p>\n    <br />\n    <Link to=\"/\">Go To Home Page</Link>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\n\nimport BasicTemplate from '../shared/templates/BasicTemplate/BasicTemplateContainer';\nimport NotFoundPage from '../shared/components/NotFound';\n\nconst NotFound = () => (\n  <BasicTemplate>\n    <NotFoundPage />\n  </BasicTemplate>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from './scenes/Home';\n\nimport NotFound from './scenes/NotFound';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport { reducer as homeReducer } from '../modules/home';\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  home: homeReducer,\n});\n\nexport default rootReducer;\n","export const GET_BREEDS = 'GET_BREEDS';\nexport const GET_BREEDS_SUCCESS = 'GET_BREEDS_SUCCESS';\nexport const GET_BREEDS_LOADING = 'GET_BREEDS_LOADING';\nexport const GET_BREEDS_ERROR = 'GET_BREEDS_ERROR';\n\nexport const GET_BREED_IMAGES = 'GET_BREED_IMAGES';\nexport const GET_BREED_IMAGES_SUCCESS = 'GET_BREED_IMAGES_SUCCESS';\nexport const GET_BREED_IMAGES_LOADING = 'GET_BREED_IMAGES_LOADING';\nexport const GET_BREED_IMAGES_ERROR = 'GET_BREED_IMAGES_ERROR';\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createPromise } from 'redux-promise-middleware';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nconst reduxStore = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunk, createPromise({ promiseTypeSuffixes: ['LOADING', 'SUCCESS', 'ERROR'] })),\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n  ),\n);\n\nexport default reduxStore;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport './assets/styles/app.scss';\nimport Routes from './Routes';\nimport reduxStore from './store';\n\n\nconst App = () => (\n  <Provider store={reduxStore}>\n    <div className=\"App\">\n      <ToastContainer id=\"forToast\" />\n      <Routes />\n    </div>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}